CARGO-UNINSTALL(1)

NAME
       crabgo-uninstall — Remove a Rust binary

SYNOPSIS
       crabgo uninstall [options] [spec…]

DESCRIPTION
       This command removes a package installed with crabgo-install(1). The spec
       argument is a package ID specification of the package to remove (see
       crabgo-pkgid(1)).

       By default all binaries are removed for a crate but the --bin and
       --example flags can be used to only remove particular binaries.

       The installation root is determined, in order of precedence:

       o  --root option

       o  CARGO_INSTALL_ROOT environment variable

       o  install.root Crabgo config value
          <https://doc.rust-lang.org/crabgo/reference/config.html>

       o  CARGO_HOME environment variable

       o  $HOME/.crabgo

OPTIONS
   Install Options
       -p, --package spec…
           Package to uninstall.

       --bin name…
           Only uninstall the binary name.

       --root dir
           Directory to uninstall packages from.

   Display Options
       -v, --verbose
           Use verbose output. May be specified twice for “very verbose”
           output which includes extra output such as dependency warnings and
           build script output. May also be specified with the term.verbose
           config value
           <https://doc.rust-lang.org/crabgo/reference/config.html>.

       -q, --quiet
           Do not print crabgo log messages. May also be specified with the
           term.quiet config value
           <https://doc.rust-lang.org/crabgo/reference/config.html>.

       --color when
           Control when colored output is used. Valid values:

           o  auto (default): Automatically detect if color support is
              available on the terminal.

           o  always: Always display colors.

           o  never: Never display colors.

           May also be specified with the term.color config value
           <https://doc.rust-lang.org/crabgo/reference/config.html>.

   Common Options
       +toolchain
           If Crabgo has been installed with rustup, and the first argument to
           crabgo begins with +, it will be interpreted as a rustup toolchain
           name (such as +stable or +nightly). See the rustup documentation
           <https://rust-lang.github.io/rustup/overrides.html> for more
           information about how toolchain overrides work.

       --config KEY=VALUE or PATH
           Overrides a Crabgo configuration value. The argument should be in
           TOML syntax of KEY=VALUE, or provided as a path to an extra
           configuration file. This flag may be specified multiple times. See
           the command-line overrides section
           <https://doc.rust-lang.org/crabgo/reference/config.html#command-line-overrides>
           for more information.

       -C PATH
           Changes the current working directory before executing any specified
           operations. This affects things like where crabgo looks by default
           for the project manifest (Crabgo.toml), as well as the directories
           searched for discovering .crabgo/config.toml, for example. This
           option must appear before the command name, for example crabgo -C
           path/to/my-project build.

           This option is only available on the nightly channel
           <https://doc.rust-lang.org/book/appendix-07-nightly-rust.html> and
           requires the -Z unstable-options flag to enable (see #10098
           <https://github.com/rust-lang/crabgo/issues/10098>).

       -h, --help
           Prints help information.

       -Z flag
           Unstable (nightly-only) flags to Crabgo. Run crabgo -Z help for
           details.

ENVIRONMENT
       See the reference
       <https://doc.rust-lang.org/crabgo/reference/environment-variables.html>
       for details on environment variables that Crabgo reads.

EXIT STATUS
       o  0: Crabgo succeeded.

       o  101: Crabgo failed to complete.

EXAMPLES
       1. Uninstall a previously installed package.

              crabgo uninstall ripgrep

SEE ALSO
       crabgo(1), crabgo-install(1)

