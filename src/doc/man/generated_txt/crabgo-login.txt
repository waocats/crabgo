CARGO-LOGIN(1)

NAME
       crabgo-login — Save an API token from the registry locally

SYNOPSIS
       crabgo login [options] [token]

DESCRIPTION
       This command will save the API token to disk so that commands that
       require authentication, such as crabgo-publish(1), will be automatically
       authenticated. The token is saved in $CARGO_HOME/credentials.toml.
       CARGO_HOME defaults to .crabgo in your home directory.

       If the token argument is not specified, it will be read from stdin.

       The API token for crates.io may be retrieved from
       <https://crates.io/me>.

       Take care to keep the token secret, it should not be shared with anyone
       else.

OPTIONS
   Login Options
       --registry registry
           Name of the registry to use. Registry names are defined in Crabgo
           config files
           <https://doc.rust-lang.org/crabgo/reference/config.html>. If not
           specified, the default registry is used, which is defined by the
           registry.default config key which defaults to crates-io.

   Display Options
       -v, --verbose
           Use verbose output. May be specified twice for “very verbose”
           output which includes extra output such as dependency warnings and
           build script output. May also be specified with the term.verbose
           config value
           <https://doc.rust-lang.org/crabgo/reference/config.html>.

       -q, --quiet
           Do not print crabgo log messages. May also be specified with the
           term.quiet config value
           <https://doc.rust-lang.org/crabgo/reference/config.html>.

       --color when
           Control when colored output is used. Valid values:

           o  auto (default): Automatically detect if color support is
              available on the terminal.

           o  always: Always display colors.

           o  never: Never display colors.

           May also be specified with the term.color config value
           <https://doc.rust-lang.org/crabgo/reference/config.html>.

   Common Options
       +toolchain
           If Crabgo has been installed with rustup, and the first argument to
           crabgo begins with +, it will be interpreted as a rustup toolchain
           name (such as +stable or +nightly). See the rustup documentation
           <https://rust-lang.github.io/rustup/overrides.html> for more
           information about how toolchain overrides work.

       --config KEY=VALUE or PATH
           Overrides a Crabgo configuration value. The argument should be in
           TOML syntax of KEY=VALUE, or provided as a path to an extra
           configuration file. This flag may be specified multiple times. See
           the command-line overrides section
           <https://doc.rust-lang.org/crabgo/reference/config.html#command-line-overrides>
           for more information.

       -C PATH
           Changes the current working directory before executing any specified
           operations. This affects things like where crabgo looks by default
           for the project manifest (Crabgo.toml), as well as the directories
           searched for discovering .crabgo/config.toml, for example. This
           option must appear before the command name, for example crabgo -C
           path/to/my-project build.

           This option is only available on the nightly channel
           <https://doc.rust-lang.org/book/appendix-07-nightly-rust.html> and
           requires the -Z unstable-options flag to enable (see #10098
           <https://github.com/rust-lang/crabgo/issues/10098>).

       -h, --help
           Prints help information.

       -Z flag
           Unstable (nightly-only) flags to Crabgo. Run crabgo -Z help for
           details.

ENVIRONMENT
       See the reference
       <https://doc.rust-lang.org/crabgo/reference/environment-variables.html>
       for details on environment variables that Crabgo reads.

EXIT STATUS
       o  0: Crabgo succeeded.

       o  101: Crabgo failed to complete.

EXAMPLES
       1. Save the API token to disk:

              crabgo login

SEE ALSO
       crabgo(1), crabgo-logout(1), crabgo-publish(1)

